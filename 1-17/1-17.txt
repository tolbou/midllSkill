
﻿⚫️課題1−17
①オブジェクト指向とはどんな考え方ですか？
現実世界の事物や概念を、それぞれ独立した「オブジェクト」として捉え、
そのオブジェクト同士の関係や振る舞いを定義してプログラムを作成する考え方です。



②オブジェクト思考的な開発を効率よく行うための3つの要素は何ですか？
「プログラムの独立性」
「プログラムの再利用性」
「プログラムの拡張性」



③ 現場で利用される共通部品などは上記のどの要素を当てはまりますか？
「プログラムの再利用性」


④プログラミングはなぜ独立している方が良いのですか？
コードの再利用性や保守性を高めることができます。
また、プログラムが独立している場合、変更が容易になり、システムの設計や実装が容易になります。
さらに、独立しているプログラムは、他のプログラムと組み合わせて新しいシステムを構築することができます。



⑤Javaの継承とは何ですか？
既存のクラスをベースに新しいクラスを作成するための機能です。



⑥ポリモーフィズムのメリットは何ですか？2つ上げなさい
コードの再利用性が高まる：ポリモーフィズムを使用することで、同じメソッド名を持つ異なるクラスを作成することができます。これにより、同じコードを何度も書く必要がなくなり、コードの再利用性が向上します。

柔軟性が高まる：ポリモーフィズムを使用することで、異なるクラスを同じインターフェースで操作することができます。これにより、プログラムがより柔軟になり、様々なシナリオに対応することができます。



⑦コンストラクタとは何ですか？
クラスからオブジェクトを生成する際に呼び出される特別なメソッドです。



⑧カプセル化とは何ですか？
オブジェクト指向プログラミングにおいて、オブジェクトの内部状態を保護するために、データとメソッドをひとまとめにしてカプセル化することを指します。
カプセル化により、オブジェクトの内部状態を隠蔽し、外部からの不正なアクセスを防止することができます。
また、オブジェクトの内部状態が変更された場合に、その変更に依存する他のコードに影響を与えることを防止することもできます。